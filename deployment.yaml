apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:

spec:
  selector:
    service: frontend-app

  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: LoadBalancer
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app: frontend

spec:
  replicas: 1
  selector:
    matchLabels:
      container: frontend

  template:
    metadata:
      labels:
        container: frontend
        service: frontend-app

    spec:
      containers:
      - name: my-frontend
        image: frontend-img
        imagePullPolicy: Never
        ports:
        - containerPort: 5000

---
apiVersion: v1
kind: Service
metadata:
  name: lda
  labels:

spec:
  selector:
    service: backend-app

  ports:
    - protocol: TCP
      port: 5001
      targetPort: 5001
  type: LoadBalancer
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: backend

spec:
  replicas: 1
  selector:
    matchLabels:
      container: backend

  template:
    metadata:
      labels:
        container: backend
        service: backend-app

    spec:
      containers:
      - name: my-backend
        image: lda-img
        imagePullPolicy: Never
        ports:
        - containerPort: 5001

---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:

spec:
  selector:
    service: mongo-app

  ports:
    - protocol: TCP
      port: 5003
      targetPort: 27017
  type: LoadBalancer
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
  labels:
    app: mongo

spec:
  replicas: 1
  selector:
    matchLabels:
      container: mongo

  template:
    metadata:
      labels:
        container: mongo
        service: mongo-app

    spec:
      containers:
      - name: my-mongo
        image: mongo
        imagePullPolicy: Always
        ports:
        - containerPort: 27017

---
apiVersion: v1
kind: Service
metadata:
  name: scraper
  labels:

spec:
  selector:
    service: scraper-app

  ports:
    - protocol: TCP
      port: 5002
      targetPort: 5002
  type: LoadBalancer
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scraper-deployment
  labels:
    app: scraper

spec:
  replicas: 1
  selector:
    matchLabels:
      container: scraper

  template:
    metadata:
      labels:
        container: scraper
        service: scraper-app

    spec:
      containers:
      - name: my-scraper
        image: scraper-img
        imagePullPolicy: Never
        ports:
        - containerPort: 5002
